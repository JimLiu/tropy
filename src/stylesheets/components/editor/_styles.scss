// sass-lint:disable class-name-format

//
// Editor styles
// --------------------------------------------------

@import "prosemirror-view/style/prosemirror";
@import "prosemirror-gapcursor/style/gapcursor";

.ProseMirror {
  font-size: $editor-font-size;
  line-height: $editor-line-height;

  * {
    margin: 0;
  }

  &:not(.ProseMirror-focused) {
    .pseudo-selection {
      background-color: $editor-pseudo-selection-bg;
    }
  }

  a {
    cursor: text;

    .darwin.meta-key &,
    .win32.ctrl-key &,
    .linux.ctrl-key & {
      cursor: pointer;
    }

    &:hover {
      text-decoration: none;

      .darwin.meta-key &,
      .win32.ctrl-key &,
      .linux.ctrl-key & {
        text-decoration: underline;
      }
    }
  }

  strong {
    font-weight: bold;
  }

  em {
    font-style: italic;
  }

  blockquote {
    padding-left: $blockquote-padding;
    border-left: $blockquote-border solid $blockquote-border-color;
  }

  ul,
  ol {
    padding-left: $editor-list-padding;
  }

  ul {
    list-style: disc;
  }

  ul ul,
  ol ul {
    list-style: circle;
  }

  ul ul ul,
  ol ul ul,
  ul ol ul,
  ol ol ul {
    list-style: square;
  }

  ol {
    list-style: decimal;
  }

  li {
    display: block;

    p {
      display: list-item;

      @each $alignment in center, right {
        &[style*="#{$alignment}"] {
          list-style-position: inside;
        }
      }
    }
  }

  hr {
    border: 0;
    border-top: $editor-hr-border solid $editor-hr-border-color;
    margin: ($editor-line-height-computed / 2 - $editor-hr-border) 0;
  }

  sup,
  sub {
    line-height: 1;
    font-size: $sup-and-sub-font-size;
  }

  &-selectednode {
    outline: $editor-outline-width solid $selected-node-color;

    @at-root li#{&} {
      outline: none;

      &::after {
        left: -$editor-list-padding - $editor-outline-width;
        border: $editor-outline-width solid $selected-node-color;
      }
    }
  }
}
